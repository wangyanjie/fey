package org.dao;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * 内部使用的用于保存连接池中连接对象的类
 * 此类中有两个成员，一个是数据库的连接，另一个是指示此连接是否
 * 正在使用的标志。
 */
class PooledConnection {
	private Connection connection = null;// 数据库连接
	private boolean busy ; // 此连接是否正在使用的标志，默认没有正在使用
	// 构造函数，根据一个 Connection 构告一个 PooledConnection 对象
	private PooledConnection(Connection connection) {
		this.connection = connection;
	}
	public ResultSet executeQuery(String sql) throws SQLException {
		return connection.createStatement().executeQuery(sql);
	}
	public int executeUpdate(String sql) throws SQLException {
		return connection.createStatement().executeUpdate(sql);
	}
	// 返回此对象中的连接
	private Connection getConnection() {
		return connection;
	}
	// 设置此对象的，连接
	private void setConnection(Connection connection) {
		this.connection = connection;
	}
	// 获得对象连接是否忙
	private boolean isBusy() {
		return busy;
	}
	// 设置对象的连接正在忙
	private void setBusy(boolean busy) {
		// System.out.println("set to busy:"+busy);
		this.busy = busy;
	}
	public void close() {
		busy = false;
	}
}

